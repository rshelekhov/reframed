CREATE TABLE IF NOT EXISTS users
(
    id         character varying PRIMARY KEY,
    email      character varying NOT NULL,
    password   character varying NOT NULL,
    updated_at timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_active_users ON users (email) WHERE deleted_at IS NULL;

CREATE TABLE IF NOT EXISTS resolutions
(
    id          character varying PRIMARY KEY,
    title       character varying NOT NULL,
    description character varying NOT NULL,
    year        int NOT NULL,
    user_id     character varying NOT NULL,
    updated_at  timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at  timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_resolution_user_id ON resolutions (user_id);

CREATE TABLE IF NOT EXISTS areas
(
    id          character varying PRIMARY KEY,
    title       character varying NOT NULL,
    description character varying NOT NULL,
    user_id     character varying NOT NULL,
    updated_at  timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at  timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_area_user_id ON areas (user_id);

CREATE TABLE IF NOT EXISTS resolutions_areas
(
    resolution_id character varying NOT NULL,
    area_id       character varying NOT NULL,
    CONSTRAINT resolutions_areas_pkey PRIMARY KEY (resolution_id, area_id)
);

CREATE TABLE IF NOT EXISTS goals
(
    id            character varying PRIMARY KEY,
    title         character varying NOT NULL,
    description   character varying NOT NULL,
    resolution_id character varying NOT NULL,
    year          int NOT NULL,
    quarter       int,
    month         int,
    week          int,
    status_id     int NOT NULL,
    user_id       character varying NOT NULL,
    updated_at    timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at    timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_goal_resolution_id ON goals (resolution_id);

CREATE TABLE IF NOT EXISTS areas_goals
(
    area_id character varying NOT NULL,
    goal_id character varying NOT NULL,
    CONSTRAINT areas_goals_pkey PRIMARY KEY (area_id, goal_id)
);

CREATE TABLE IF NOT EXISTS goal_statuses
(
    id          int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    status_name character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS attachments
(
    id                character varying PRIMARY KEY ,
    file_name         character varying NOT NULL,
    file_url          character varying NOT NULL,
    attachment_size   character varying NULL,
    goal_id           character varying NOT NULL,
    updated_at        timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at        timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_attachment_goal_id ON attachments(goal_id);

CREATE TABLE IF NOT EXISTS actions
(
    id          character varying PRIMARY KEY,
    title       character varying NOT NULL,
    description character varying,
    goal_id     character varying NOT NULL,
    start_date  timestamp WITH TIME ZONE,
    deadline    timestamp WITH TIME ZONE,
    start_time  time WITH TIME ZONE,
    end_time    time WITH TIME ZONE,
    priority_id int,
    status_id   int NOT NULL,
    user_id     character varying NOT NULL,
    updated_at  timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at  timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_action_goal_id ON actions(goal_id);

CREATE TABLE IF NOT EXISTS priorities
(
    id            int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    priority_name character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS action_statuses
(
    id          int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    status_name character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS tags
(
    id         character varying PRIMARY KEY,
    title      character varying NOT NULL,
    user_id    character varying NOT NULL,
    updated_at timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_tag_user_id ON tags(user_id);

CREATE TABLE IF NOT EXISTS tags_actions
(
    tag_id    character varying NOT NULL,
    action_id character varying NOT NULL,
    CONSTRAINT tags_actions_pkey PRIMARY KEY (tag_id, action_id)
);

CREATE TABLE IF NOT EXISTS reminders
(
    id             character varying PRIMARY KEY,
    content        character varying NOT NULL,
    read           boolean NOT NULL,
    action_id      character varying NOT NULL,
    user_id        character varying NOT NULL,
    updated_at     timestamp WITH TIME ZONE NOT NULL DEFAULT now(),
    deleted_at     timestamp WITH TIME ZONE DEFAULT NULL
);

CREATE INDEX IF NOT EXISTS idx_remind_action_id ON reminders(action_id);

CREATE TABLE IF NOT EXISTS reminder_settings
(
    id       int PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    interval character varying NOT NULL
);

ALTER TABLE resolutions ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE areas ADD FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE resolutions_areas ADD FOREIGN KEY (resolution_id) REFERENCES resolutions (id);
ALTER TABLE resolutions_areas ADD FOREIGN KEY (area_id) REFERENCES areas (id);
ALTER TABLE goals ADD FOREIGN KEY (resolution_id) REFERENCES resolutions (id);
ALTER TABLE goals ADD FOREIGN KEY (status_id) REFERENCES goal_statuses (id);
ALTER TABLE goals ADD FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE areas_goals ADD FOREIGN KEY (area_id) REFERENCES areas(id);
ALTER TABLE areas_goals ADD FOREIGN KEY (goal_id) REFERENCES goals(id);
ALTER TABLE attachments ADD FOREIGN KEY (goal_id) REFERENCES goals(id);
ALTER TABLE actions ADD FOREIGN KEY (goal_id) REFERENCES goals(id);
ALTER TABLE actions ADD FOREIGN KEY (priority_id) REFERENCES priorities(id);
ALTER TABLE actions ADD FOREIGN KEY (status_id) REFERENCES action_statuses(id);
ALTER TABLE actions ADD FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE tags ADD FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE tags_actions ADD FOREIGN KEY (tag_id) REFERENCES tags(id);
ALTER TABLE tags_actions ADD FOREIGN KEY (action_id) REFERENCES actions(id);
ALTER TABLE reminders ADD FOREIGN KEY (action_id) REFERENCES actions(id);
ALTER TABLE reminders ADD FOREIGN KEY (user_id) REFERENCES users(id);
